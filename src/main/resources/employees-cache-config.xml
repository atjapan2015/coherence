<?xml version="1.0"?>

<!--
This XML document is a default Coherence Cache Configuration deployment descriptor that should be
customized (or replaced) for your particular caching and deployment requirements.

This configuration is usable in servers, proxies, clustered clients, and non-clustered extend clients.

When used from within a server such a DefaultCacheServer, the server will automatically host a storage enabled cache
service as well as a proxy service to allow extend clients to access the caches.  Clients using the configuration are
storage disabled by default.

This configuration defines a number of inter-related cache schemes:

 - server      - this scheme defines the storage tier for all caches
 - thin-direct - this scheme is for use by cluster members to access the caches hosted by the "server" scheme
 - near-direct - this scheme adds near caching to "thin-direct"
 - thin-remote - conceptually similar to "thin-direct" but for use by extend clients
 - near-remote - conceptually similar to "near-direct" but for use by extend clients

The default scheme for caches is "near-direct".  This default can be overridden via two system properties.  The
"coherence.profile" system property controls the first portion of the scheme name and defines the approach used for
in-process caching, i.e. "near" (on-demand) or "thin" (none).  The "coherence.client" system property controls how a
client connects to the cluster, i.e. "direct" (cluster member) or "remote" (extend client).

Note: System properties defined within this cache configuration are specific to this configuration and are not
meaningful to other cache configurations unless similarly defined there.
-->
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
              xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config http://xmlns.oracle.com/coherence/coherence-cache-config/1.3/coherence-cache-config.xsd">
	<defaults>

		<!-- Note: This element defines the default serializer for all services
		defined within this cache configuration descriptor. Valid values include
		full serializer definitions, as well as named references to serializers defined
		within the "serializers" element of the operational configuration. Example
		values include: java, pof. Default value is java. -->
		<serializer system-property="tangosol.coherence.serializer" />

		<!-- Note: This element defines the default socket-provider for all Coherence
		Extend services defined within this cache configuration descriptor. Valid
		values include full socket-provider definitions, as well as named references
		to providers defined within the "socket-providers" element of the operational
		configuration. This setting only specifies the default socket-provider for
		Coherence Extend services; TCMP's socket-provider is specified within the
		"unicast-listener" of the operational configuration. Example values include:
		system, ssl. Default value is system. -->
		<socket-provider system-property="tangosol.coherence.socketprovider" />
	</defaults>

	<caching-scheme-mapping>
		<cache-mapping>
			<cache-name>*</cache-name>
			<scheme-name>ExamplesPartitionedPofScheme</scheme-name>
		</cache-mapping>
	</caching-scheme-mapping>

	<caching-schemes>
		<distributed-scheme>
			<scheme-name>ExamplesPartitionedPofScheme</scheme-name>
			<service-name>PartitionedPofCache</service-name>
			<serializer>
				<instance>
					<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
					<init-params>
						<init-param>
							<param-type>String</param-type>
							<param-value>employees-pof-config.xml</param-value>
						</init-param>
					</init-params>
				</instance>
			</serializer>
			<backing-map-scheme>
				<local-scheme>
					<!-- each node will be limited to 250MB -->
					<high-units>250M</high-units>
					<unit-calculator>binary</unit-calculator>
				</local-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
	</caching-schemes>
</cache-config>